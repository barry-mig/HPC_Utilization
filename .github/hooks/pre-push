#!/usr/bin/env bash
# Block push if there are unstaged changes (safety)
if ! git diff --quiet; then
  echo "Unstaged changes present. Commit before pushing."; exit 1; fi

# Allow override
if [ "${SKIP_SECRET_SCAN:-}" = "1" ]; then
  echo "[pre-push] Secret scan skipped via SKIP_SECRET_SCAN=1"
  exit 0
fi

# Build diff base
if git rev-parse --verify origin/main >/dev/null 2>&1; then
  base=origin/main
else
  base=$(git rev-list --max-parents=0 HEAD | tail -1)
fi

diff_content=$(git diff "$base"..HEAD)

# Remove lines explicitly ignored
scan_content=$(echo "$diff_content" | grep -v '# secret-scan: ignore' || true)

# Relaxed targeted patterns:
# 1. AWS Access Key IDs (AKIA... 20 chars)
# 2. AWS Secret Access Keys (40 char base64-ish)
# 3. Generic assignments of API_KEY/SECRET_KEY with long (>24) tokens
# (Heuristic; avoids short words triggering false positives)
if echo "$scan_content" | grep -E 'AKIA[0-9A-Z]{16}' >/dev/null; then
  echo "Possible AWS Access Key detected. Abort."; exit 1; fi
if echo "$scan_content" | grep -E 'AWS_SECRET_ACCESS_KEY[=:][:space:]*[A-Za-z0-9/+=]{40}' >/dev/null; then
  echo "Possible AWS Secret Access Key detected. Abort."; exit 1; fi
if echo "$scan_content" | grep -E '(API_KEY|SECRET_KEY)[=:][:space:]*[A-Za-z0-9_\-]{24,}' >/dev/null; then
  echo "Possible long token assignment detected. Abort."; exit 1; fi

echo "[pre-push] Secret scan passed."
